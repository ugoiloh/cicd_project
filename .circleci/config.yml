# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

commands:
  print_pipeline_id:
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>

# Define a job to be invoked later in a workflow.
jobs:

  print_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>

  print_hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    steps:
      - checkout
      - run:
          name: "Print hello"
          command: "echo hello"
  print_world:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    steps:
      - checkout
      - run:
          name: "Print world"
          command: "echo World!"

  build:
    docker:
      - image: cimg/base:2021.11
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $my_env_var # this env var must be set within the project

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  test_error:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail

workflows:

  print-parameter-id:
    jobs:
      - print_id

  welcome:
    jobs:
      - print_hello

      - print_world:
          requires: 
            - print_hello

  test-env-vars:
    jobs:
      - build

  write-read-file:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output

  simulate-error:
    jobs:
      - test_error


